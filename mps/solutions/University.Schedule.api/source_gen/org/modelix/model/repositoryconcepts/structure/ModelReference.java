package org.modelix.model.repositoryconcepts.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import org.modelix.mps.apigen.runtime.INodeHolder;
import org.jetbrains.annotations.NotNull;
import org.modelix.model.api.INode;
import org.modelix.mps.apigen.runtime.MPSLanguageRegistry;

/**
 * Generated for http://127.0.0.1:63320/node?ref=r%3Af2f39a18-fd23-4090-b7f2-ba8da340eec2%28org.modelix.model.repositoryconcepts.structure%29%2F6402965165736932003
 */
public class ModelReference extends BaseConcept {

  public class Properties extends BaseConcept.Properties implements INodeHolder {

    @NotNull
    @Override
    public INode getINode() {
      return ModelReference.this.getINode();
    }
  }
  public class Children extends BaseConcept.Children implements INodeHolder {

    @NotNull
    @Override
    public INode getINode() {
      return ModelReference.this.getINode();
    }
  }
  public class References extends BaseConcept.References implements INodeHolder {

    @NotNull
    @Override
    public INode getINode() {
      return ModelReference.this.getINode();
    }
    @NotNull
    public Model getModel() {
      return MPSLanguageRegistry.INSTANCE.getInstance(getINode().getReferenceTarget("model"));
    }
    @NotNull
    public Model setModel(@NotNull Model value) {
      getINode().setReferenceTarget("model", value.getINode());
      return value;
    }


  }

  private final Properties properties;
  private final Children children;
  private final References references;
  public ModelReference(INode node) {
    super(node);
    this.properties = new Properties();
    this.children = new Children();
    this.references = new References();
  }
  public Properties getProperties() {
    return this.properties;
  }
  public Children getChildren() {
    return this.children;
  }
  public References getReferences() {
    return this.references;
  }
}
