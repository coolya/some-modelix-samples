package University.Schedule.structure.concepts;

/*Generated by MPS */

import org.modelix.mps.apigen.runtime.AbstractConcept;
import University.Schedule.structure.Courses;
import org.jetbrains.annotations.NotNull;
import org.modelix.model.api.INode;
import java.util.HashMap;
import org.modelix.mps.apigen.runtime.MPSProperty;
import org.modelix.mps.apigen.runtime.MPSChildLink;
import org.modelix.mps.apigen.runtime.MPSReferenceLink;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.core.structure.concepts.BaseConceptConcept;

public class CoursesConcept extends AbstractConcept<Courses> {

  @NotNull
  @Override
  public Courses createInstance(@NotNull INode node) {
    return new Courses(node);
  }
  private final HashMap<String, MPSProperty> properties = new HashMap<String, MPSProperty>();
  private final HashMap<String, MPSChildLink> children = new HashMap<String, MPSChildLink>();
  private final HashMap<String, MPSReferenceLink> references = new HashMap<String, MPSReferenceLink>();
  private final List<AbstractConcept<?>> superConcepts = new ArrayList<AbstractConcept<?>>();
  public static final CoursesConcept INSTANCE = new CoursesConcept();
  private CoursesConcept() {
    super(false, "University.Schedule.structure.Courses", "Courses", "96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192");
  }

  @Override
  protected void doInit() {
    this.children.put("lectures", new MPSChildLink(this, LectureConcept.INSTANCE, true, true, "lectures"));
    this.superConcepts.add(BaseConceptConcept.INSTANCE);
  }
  @NotNull
  @Override
  protected HashMap<String, MPSProperty> myProperties() {
    return properties;
  }
  @NotNull
  @Override
  protected HashMap<String, MPSChildLink> myChildLinks() {
    return children;
  }
  @NotNull
  @Override
  protected HashMap<String, MPSReferenceLink> myReferenceLinks() {
    return references;
  }
  @NotNull
  @Override
  protected List<AbstractConcept<?>> mySuperConcepts() {
    return superConcepts;
  }
}
