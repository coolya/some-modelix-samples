package University.Schedule.api.gen;

/*Generated by MPS */

import org.modelix.mps.apigen.runtime.MPSLanguage;
import java.util.List;
import org.modelix.mps.apigen.runtime.AbstractConcept;
import jetbrains.mps.lang.core.structure.concepts.AttributeConcept;
import jetbrains.mps.lang.core.structure.concepts.BaseCommentAttributeConcept;
import jetbrains.mps.lang.core.structure.concepts.BaseConceptConcept;
import jetbrains.mps.lang.core.structure.concepts.BasePlaceholderConcept;
import jetbrains.mps.lang.core.structure.concepts.ChildAttributeConcept;
import jetbrains.mps.lang.core.structure.concepts.IAntisuppressErrorsConcept;
import jetbrains.mps.lang.core.structure.concepts.ICanSuppressErrorsConcept;
import jetbrains.mps.lang.core.structure.concepts.IContainerConcept;
import jetbrains.mps.lang.core.structure.concepts.IDeprecatableConcept;
import jetbrains.mps.lang.core.structure.concepts.IDontApplyTypesystemRulesConcept;
import jetbrains.mps.lang.core.structure.concepts.IDontSubstituteByDefaultConcept;
import jetbrains.mps.lang.core.structure.concepts.IMetaLevelChangerConcept;
import jetbrains.mps.lang.core.structure.concepts.INamedConceptConcept;
import jetbrains.mps.lang.core.structure.concepts.IOldCommentContainerConcept;
import jetbrains.mps.lang.core.structure.concepts.IPlaceholderContentConcept;
import jetbrains.mps.lang.core.structure.concepts.IResolveInfoConcept;
import jetbrains.mps.lang.core.structure.concepts.ISkipConstraintsCheckingConcept;
import jetbrains.mps.lang.core.structure.concepts.ISmartReferentConcept;
import jetbrains.mps.lang.core.structure.concepts.IStubForAnotherConceptConcept;
import jetbrains.mps.lang.core.structure.concepts.ISuppressErrorsConcept;
import jetbrains.mps.lang.core.structure.concepts.ITypeConcept;
import jetbrains.mps.lang.core.structure.concepts.IWrapperConcept;
import jetbrains.mps.lang.core.structure.concepts.ImplementationContainerConcept;
import jetbrains.mps.lang.core.structure.concepts.ImplementationPartConcept;
import jetbrains.mps.lang.core.structure.concepts.ImplementationWithStubPartConcept;
import jetbrains.mps.lang.core.structure.concepts.InterfacePartConcept;
import jetbrains.mps.lang.core.structure.concepts.LinkAttributeConcept;
import jetbrains.mps.lang.core.structure.concepts.MigrationAnnotationConcept;
import jetbrains.mps.lang.core.structure.concepts.MigrationAnnotation_oldConcept;
import jetbrains.mps.lang.core.structure.concepts.MigrationDataAnnotationConcept;
import jetbrains.mps.lang.core.structure.concepts.NodeAttributeConcept;
import jetbrains.mps.lang.core.structure.concepts.PropertyAttributeConcept;
import jetbrains.mps.lang.core.structure.concepts.ReviewMigrationConcept;
import jetbrains.mps.lang.core.structure.concepts.ReviewMigration_oldConcept;
import jetbrains.mps.lang.core.structure.concepts.ScopeFacadeConcept;
import jetbrains.mps.lang.core.structure.concepts.ScopeProviderConcept;
import jetbrains.mps.lang.core.structure.concepts.SideTransformInfoConcept;
import jetbrains.mps.lang.core.structure.concepts.SuppressErrorsAnnotationConcept;
import jetbrains.mps.lang.core.structure.concepts.TypeAnnotatedConcept;
import java.util.function.Consumer;

public class jetbrains_mps_lang_core extends MPSLanguage {
  public static final jetbrains_mps_lang_core INSTANCE = new jetbrains_mps_lang_core();
  private jetbrains_mps_lang_core() {
    super("jetbrains.mps.lang.core", "jetbrains.mps.lang.core");
    List<AbstractConcept<?>> myConcepts = this.getMyConcepts();
    myConcepts.add(AttributeConcept.INSTANCE);
    myConcepts.add(BaseCommentAttributeConcept.INSTANCE);
    myConcepts.add(BaseConceptConcept.INSTANCE);
    myConcepts.add(BasePlaceholderConcept.INSTANCE);
    myConcepts.add(ChildAttributeConcept.INSTANCE);
    myConcepts.add(IAntisuppressErrorsConcept.INSTANCE);
    myConcepts.add(ICanSuppressErrorsConcept.INSTANCE);
    myConcepts.add(IContainerConcept.INSTANCE);
    myConcepts.add(IDeprecatableConcept.INSTANCE);
    myConcepts.add(IDontApplyTypesystemRulesConcept.INSTANCE);
    myConcepts.add(IDontSubstituteByDefaultConcept.INSTANCE);
    myConcepts.add(IMetaLevelChangerConcept.INSTANCE);
    myConcepts.add(INamedConceptConcept.INSTANCE);
    myConcepts.add(IOldCommentContainerConcept.INSTANCE);
    myConcepts.add(IPlaceholderContentConcept.INSTANCE);
    myConcepts.add(IResolveInfoConcept.INSTANCE);
    myConcepts.add(ISkipConstraintsCheckingConcept.INSTANCE);
    myConcepts.add(ISmartReferentConcept.INSTANCE);
    myConcepts.add(IStubForAnotherConceptConcept.INSTANCE);
    myConcepts.add(ISuppressErrorsConcept.INSTANCE);
    myConcepts.add(ITypeConcept.INSTANCE);
    myConcepts.add(IWrapperConcept.INSTANCE);
    myConcepts.add(ImplementationContainerConcept.INSTANCE);
    myConcepts.add(ImplementationPartConcept.INSTANCE);
    myConcepts.add(ImplementationWithStubPartConcept.INSTANCE);
    myConcepts.add(InterfacePartConcept.INSTANCE);
    myConcepts.add(LinkAttributeConcept.INSTANCE);
    myConcepts.add(MigrationAnnotationConcept.INSTANCE);
    myConcepts.add(MigrationAnnotation_oldConcept.INSTANCE);
    myConcepts.add(MigrationDataAnnotationConcept.INSTANCE);
    myConcepts.add(NodeAttributeConcept.INSTANCE);
    myConcepts.add(PropertyAttributeConcept.INSTANCE);
    myConcepts.add(ReviewMigrationConcept.INSTANCE);
    myConcepts.add(ReviewMigration_oldConcept.INSTANCE);
    myConcepts.add(ScopeFacadeConcept.INSTANCE);
    myConcepts.add(ScopeProviderConcept.INSTANCE);
    myConcepts.add(SideTransformInfoConcept.INSTANCE);
    myConcepts.add(SuppressErrorsAnnotationConcept.INSTANCE);
    myConcepts.add(TypeAnnotatedConcept.INSTANCE);
    myConcepts.forEach(new Consumer<AbstractConcept<?>>() {
      public void accept(AbstractConcept<?> concept) {
        concept.init(jetbrains_mps_lang_core.this);
      }
    });
  }
}
